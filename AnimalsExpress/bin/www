#!/usr/bin/env node

const app = require('../app'); // Importuje aplikację z app.js
const debug = require('debug')('AnimalsExpress:server'); // Importuje moduł debug
const http = require('http'); // Importuje moduł HTTP

const port = normalizePort(process.env.PORT || '3100'); // Ustawia port, na którym serwer będzie działać
app.set('port', port); // Ustawia port dla aplikacji

const server = http.createServer(app); // Tworzy serwer HTTP

server.listen(port); // Serwer nasłuchuje na ustawionym porcie
server.on('error', onError); // Dodaje listener dla błędów serwera
server.on('listening', onListening); // Dodaje listener dla zdarzenia "listening"

function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) return val; // Nazwana rura
  if (port >= 0) return port; // Numer portu
  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') throw error;
  const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' wymaga podwyższonych uprawnień');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' jest już używany');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  debug('Listening on ' + bind);
  console.log(`AnimalsExpress API running on http://localhost:${addr.port}`);
}
